// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopsRUs.Persistence.Contexts;

namespace ShopsRUs.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220109181652_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ShopsRUs.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAffliate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fdf83730-67e7-4961-b842-9244ffa5032a"),
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 50, DateTimeKind.Local).AddTicks(543),
                            IsAffliate = true,
                            IsEmployee = false,
                            Name = "Özgür"
                        },
                        new
                        {
                            Id = new Guid("f82f86e5-b247-46b0-9676-c6754a95c2e2"),
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 50, DateTimeKind.Local).AddTicks(7051),
                            IsAffliate = false,
                            IsEmployee = true,
                            Name = "Burcu"
                        },
                        new
                        {
                            Id = new Guid("fc7491b8-21d3-4122-a015-6e1d17606da1"),
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 50, DateTimeKind.Local).AddTicks(7075),
                            IsAffliate = false,
                            IsEmployee = false,
                            Name = "Mısra"
                        },
                        new
                        {
                            Id = new Guid("3934a23b-ea17-4470-9c9d-a46dfafb09d6"),
                            CreatedAt = new DateTime(2017, 1, 9, 21, 16, 52, 50, DateTimeKind.Local).AddTicks(7078),
                            IsAffliate = false,
                            IsEmployee = false,
                            Name = "Duygu"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Percentage")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bd7f808-52eb-40b4-b0c6-764efa658257"),
                            Amount = 0m,
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 51, DateTimeKind.Local).AddTicks(9933),
                            Name = "Affliate",
                            Percentage = 10.0,
                            Type = "affliatediscount"
                        },
                        new
                        {
                            Id = new Guid("d5bf8a8e-76a9-4bfb-a82c-02a7c567db9a"),
                            Amount = 0m,
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 51, DateTimeKind.Local).AddTicks(9997),
                            Name = "Employee",
                            Percentage = 30.0,
                            Type = "employeediscount"
                        },
                        new
                        {
                            Id = new Guid("1977943c-e033-482a-bc30-265a45702968"),
                            Amount = 0m,
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 52, DateTimeKind.Local),
                            Name = "Old Customer",
                            Percentage = 5.0,
                            Type = "oldcustomerdiscount"
                        },
                        new
                        {
                            Id = new Guid("8dfeeed1-0d47-4e28-8084-5f4b6b24e85e"),
                            Amount = 0m,
                            CreatedAt = new DateTime(2022, 1, 9, 21, 16, 52, 52, DateTimeKind.Local).AddTicks(2),
                            Name = "100 Dollar Discount",
                            Percentage = 5.0,
                            Type = "Per100Dollardiscount"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRUs.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("ShopsRUs.Domain.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ShopsRUs.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
